version: '3'

services:
  # API Gateway - Point d'entrée REST et GraphQL
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - article-service
      - category-service
      - kafka
    environment:
      - PORT=3000
      - ARTICLE_SERVICE_URL=article-service:50051
      - CATEGORY_SERVICE_URL=category-service:50052
    networks:
      - app-network
    restart: unless-stopped

  # Service des Articles
  article-service:
    build: ./article-service
    depends_on:
      - mongodb
      - kafka
    environment:
      - PORT=3001
      - GRPC_PORT=50051
      - MONGO_URI=mongodb://mongodb:27017/decoration-articles
    networks:
      - app-network
    restart: unless-stopped

  # Service des Catégories
  category-service:
    build: ./category-service
    depends_on:
      - mongodb
      - kafka
    environment:
      - PORT=3002
      - GRPC_PORT=50052
      - MONGO_URI=mongodb://mongodb:27017/decoration-articles
    networks:
      - app-network
    restart: unless-stopped

  # Base de données MongoDB
  mongodb:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
    restart: unless-stopped

  # Zookeeper pour Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    restart: unless-stopped

  # Kafka pour la communication asynchrone
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network
    restart: unless-stopped

  # Interface utilisateur pour gérer Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge